Name(s):


Link: http://cs1200-web.cs.colorado.edu:8080  

-----------------------------------------
Exploring the API (look at messenger.cpp)
-----------------------------------------

1. What endpoints are available? What kind of requests do they accept? What url parameters can they take? What format should the data be in for each endpoint?




--------------------------------------------------------------------------
Using curl, do the following tasks. Copy+paste the commands you used below
--------------------------------------------------------------------------

Here are flags that you may find useful:
-i (--include) include the HTTP-header in the output
-X (--request) specifies what kind of request to make
-d (--data) specifies what data to send along with your request
-H (--header) specifies a header to send along with the request

Here is the general format:
curl -i -X TYPE http://cs1200-web.cs.colorado.edu:8080/ [--data YOUR_DATA_HERE] [--header YOUR_HEADERS_HERE]
(don't include the square brackets, they are indicating that you don't need to include these pieces for all requests)

1. Get a list of available chat rooms



2. Create a new chat room



3. Post a message in a chat room
hint: when POSTing JSON, you'll need to include the header "Content-Type: application/json"
hint2: when formatting your JSON, format it like: '{"field1": "value1", "field2": "value2"}'
Hint 3: do include the quotations in your curl request!


4. Display the contents of a chat room


--------------------------------------------------------------------------
Using a browser extension such as Postman, HttpRequester, Insomnia, etc... 
--------------------------------------------------------------------------

Do tasks 1 - 4, using the browser extension of your choice.

What are advantages/disadvantages of using curl versus the extension that you used?



-------------------------
Improving our web service
-------------------------
Take the provided code and modify messenger.cpp.

The steps for building are the same as for Simple-Web-Server (https://gitlab.com/eidheim/Simple-Web-Server.git)


1. Make it so that if a user tries to create a room that already exists, that room isn't re-created. Copy + paste your modified /createroom endpoint here.



2. Add more endpoints of your own. Copy & paste the code that you've added here.






